{
  "additionalProperties": true,
  "properties": {
    "hash": {
      "description": "Whether filename will contain hash part.",
      "oneOf": [
        {
          "description": "Add a hash part to all filenames.",
          "type": "boolean"
        },
        {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "main": {
              "description": "Add a hash part to the main filename.",
              "type": "boolean"
            },
            "chunk": {
              "description": "Add a hash part to the chunk filename.",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "sourceMap": {
      "description": "Generate sourceMap for production build.",
      "type": "boolean"
    },
    "publicPath": {
      "description": "Project deployment base path.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "string"
            },
            "dev": {
              "type": "string"
            },
            "test": {
              "type": "string"
            },
            "online": {
              "type": "string"
            }
          }
        }
      ]
    },
    "library": {
      "description": "Library global name.",
      "type": "string"
    },
    "esm": {
      "description": "Module name that requires full compilation.",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "instanceof": "RegExp",
            "tsType": "RegExp"
          }
        ]
      }
    },
    "tsImportLibs": {
      "type": "array",
      "items": { "type": "object" }
    },
    "vendor": {
      "oneOf": [
        {
          "type": "array",
          "items": { "type": "string" }
        },
        {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "libs": {
              "type": "array",
              "items": { "type": "string" }
            },
            "name": {
              "description": "vendor entry.",
              "type": "string"
            }
          }
        }
      ]
    },
    "compiler": {
      "type": "object",
      "properties": {
        "cssExtract": {
          "description": "Extract style to an extra css file.",
          "type": "boolean"
        },
        "checkDuplicatePackage": {
          "description": "Check if duplicate dependencies are included.",
          "oneOf": [
            {
              "description": "Set false to disable checking.",
              "type": "boolean"
            },
            {
              "description": "Set warning level. => <warning | error>",
              "type": "string",
              "pattern": "^(warning|error)$"
            }
          ]
        },
        "splitChunks": {
          "description": "Split initial chunks.",
          "type": "boolean"
        },
        "splitSNC": {
          "description": "Split universal-framework.",
          "type": "boolean"
        },
        "vueRuntimeOnly": {
          "description": "Compile with vue runtime.",
          "type": "boolean"
        },
        "dropConsole": {
          "description": "Drop console.log.",
          "type": "boolean"
        },
        "jsonpFunction": {
          "description": "Webpack jsonp function name.",
          "type": "string"
        },
        "externals": {
          "description": "Excluding dependencies from the output bundles.",
          "type": "object"
        },
        "noTsTypeError": {
          "description": "Disable TypeScript checking.",
          "type": "boolean"
        },
        "base64ImgLimit": {
          "description": "Return a DataURL if the file is smaller than a byte limit.",
          "oneOf": [
            {
              "description": "Enable or disable transform files into base64.",
              "type": "boolean"
            },
            {
              "description": "A Number specifying the maximum size of a file in bytes.",
              "type": "integer"
            }
          ]
        }
      }
    },
    "ciConfig": {
      "description": "Options for the GitLab CI runner.",
      "type": "object",
      "properties": {
        "zip_config_name": {
          "type": "string"
        }
      }
    },
    "devServer": {
      "additionalProperties": false,
      "description": "Options for the marax-dev-server.",
      "type": "object",
      "properties": {
        "open": {
          "description": "Open the browser automatically after the service starts.",
          "type": "boolean"
        },
        "https": {
          "description": "Enable https protocol.",
          "type": "boolean"
        },
        "port": {
          "description": "Specify the port integer.",
          "type": "integer"
        },
        "proxy": {
          "description": "Proxy table.",
          "type": "object"
        }
      }
    },
    "hybrid": {
      "description": "Options for the hybrid deployment.",
      "type": "object"
    },
    "tinifyKeys": {
      "description": "Developer API key from https://tinypng.com/developers.",
      "type": "array",
      "items": { "type": "string" }
    },
    "ftp": {
      "description": "Options for the ftp server.",
      "additionalProperties": false,
      "type": "object",
      "required": ["host", "port", "user", "password"],
      "properties": {
        "host": {
          "description": "Ftp server host name.",
          "type": "string"
        },
        "user": {
          "description": "Ftp server username.",
          "type": "string"
        },
        "password": {
          "description": "Ftp server user password.",
          "type": "string"
        },
        "port": {
          "description": "Ftp server port integer.",
          "type": "integer"
        },
        "reload": {
          "description": "Refresh resource cache.",
          "type": "boolean"
        },
        "openBrowser": {
          "description": "Open the browser automatically after uploading.",
          "type": "boolean"
        },
        "remotePath": {
          "additionalProperties": true,
          "type": "object"
        },
        "hybridPublish": {
          "description": "Release the hybrid package to the dev environment.",
          "type": "boolean"
        },
        "hybridAutoVersion": {
          "description": "Automatic bump package version.",
          "type": "boolean"
        }
      }
    },
    "marax": {
      "description": "Marax internal configuration.",
      "type": "object",
      "properties": {
        "progress": {
          "enum": ["bar", "text"]
        },
        "inspire": {
          "description": "Get an inspiring quote after successful build.",
          "type": "boolean"
        }
      }
    }
  },
  "type": "object"
}
